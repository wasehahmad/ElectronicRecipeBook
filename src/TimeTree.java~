import java.util.*;

public class TimeTree{
  
  private TreeMap<Integer,LinkedList<Recipe>> tree;
  
  
  public TimeTree(){
    
    tree = new TreeMap<Integer,LinkedList<Recipe>>(new TimeCompare());
    
    
  }
  
  //add to the tree
  public void add(Recipe rec){
    
    if(!tree.containsKey(rec.getTotal())){
      //create a new array list for that cook time and add to it
      LinkedList<Recipe> list = new LinkedList<Recipe>();
      list.add(rec);
      tree.put( rec.getTotal(),list);
    }else{
      //add recipe to existing array list for that total cook time
      tree.get(rec.getTotal()).add(rec);
    }
  }
  
  //remove from the tree
  public void remove(Recipe rec){
    Integer key= rec.getTotal();
    tree.get(key).remove(rec);
    
    //if after removing the recipe, the linked list it empty, delete the linked list as well;
    if(tree.get(key).size()==0){
      tree.remove(key); 
    }
  }
  
  
  //search in the tree and return the recipe with the total cook time closest to the time required
  public LinkedList<Recipe> search(Integer integer){
    int temp=0;
    for(int i=integer;i>0; i--){
      temp = i;
      if(tree.containsKey(i)){
        i=0;
      }
    }
    if(!tree.containsKey(temp)){
      return null; 
    }else{
      return tree.get(temp);
    }
  }
  
 
  
}